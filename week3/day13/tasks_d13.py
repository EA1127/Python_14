# task 1
"""
Дан список:
list_ = [1, 2, 3, 4]  
Выведите сумму всех этих чисел, результат сохраните в новой переменной result и выведите в консоль.

Вывод:
10 

Используйте встроенную функцию.
"""
# list_ = [1, 2, 3, 4]
# result = sum(list_)
# print(result)


# task 2
"""
Создайте переменную list_ и сохраните в нем список из чисел. 
Проверьте, что все числа больше трёх, результат сохраните в новой переменной 
result и выведите в консоль. Используйте встроенную функцию.

Пример:
list_ = [1, 5, -9, 6, -4] 
Вывод:

False 
Пример:

list_ = [5, 8, 4, 6, 7] 
Вывод:

True 
"""
# list_ = [1, 5, -9, 6, -4]
# result = all(i > 3 for i in list_)
# print(result)


# task 3
"""
Создайте переменную list_ и сохраните в нем список из чисел. 
Проверьте, что в нём есть отрицательные числа, результат сохраните в новой переменной result и выведите в консоль.

Пример:

list_ = [5, 8, 4, 6, 7]
Вывод в терминал:

False 
Используйте встроенную функцию.
"""
# list_ = [5, 8, 4, 6, 7]
# result = any(i < 0 for i in list_)
# print(result)


# task 4
"""
Создайте переменную list_ и сохраните в нем список из чисел. Создайте новый список, 
состоящий из квадратов этих чисел, результат сохраните в новой переменной result и выведите в консоль.

Пример:

list_ = [1, 2, 3, 4]  
Вывод:

[1, 4, 9, 16]  
Используйте встроенную функцию.
"""
# list_ = [1, 2, 3, 4]
# result = list(map(lambda x: x**2, list_))
# print(result)


# task 5
"""
Создайте переменную list_ и сохраните в нем список из чисел. Отфильтруйте этот список, 
оставив только чётные числа, результат сохраните в новой переменной result и выведите в консоль.

Пример:

list_ = [1, 2, 3, 4] 
Вывод:

[2, 4] 
"""
# list_ = [1, 2, 3, 4]
# result = list(filter(lambda x: x % 2 == 0, list_))
# print(result)

# names = ['Alice', 'Sandra', 'Molly', 'Tim']
# greetings = list(map(lambda name: f'Welcome, {name}', filter(lambda x: len(x) >= 5, names)))
# print(greetings)


# task 6
"""
Создайте переменную list_ и сохраните в нем список со строками. Отфильтруйте этот список, оставив только те строки, 
длина которых больше 7 символов. Результат сохраните в новой переменной result и выведите в консоль.

Пример:

list_ = ['inheritance', 'solid', 'polymorphism', 'dry', 'yagni',] 
Вывод:

['inheritance', 'polymorphism'] 
"""
# list_ = ['inheritance', 'solid', 'polymorphism', 'dry', 'yagni',]
# result = list(map(lambda i: i, filter(lambda x: len(x) > 7, list_)))
# print(result)


# task 7
"""
Создайте переменную list_ и сохраните в нем список из чисел. Выведите произведение всех этих чисел. 
Результат сохраните в новой переменной result и выведите в консоль. Используйте встроенную функцию.
Пример:

list_ = [5, 6, 7, 8] 
Вывод:

1680 
Используйте встроенную функцию.
"""
# import functools
# list_ = [5, 6, 7, 8]
# result = functools.reduce(lambda x,y: x * y, list_)
# print(result)


# task 8
"""
Создайте переменную list_ и сохраните в нем список из чисел. 
Посчитате количество чётных и нечётных чисел в этом списке. 
Результат сохраните в новой переменной result и выведите в консоль в виде строки:

even: количество_четных, odd: количество_нечетных

Пример:

list_ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ] 
Вывод:

even: 5, odd: 5 
Используйте встроенную функцию.
"""
# list_ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
# even = len(list(filter(lambda x: x % 2 == 0, list_)))
# odd = len(list(filter(lambda x: x % 2 != 0, list_)))
# print(f'even: {even}, odd: {odd}')


# task 9
"""
Создайте переменную list_ и сохраните в нем список из чисел. 
Если число в списке меньше 0, замените его на False, если больше, то на True.
 Результат сохраните в новой переменной result и выведите в консоль.

Пример:

list_ = [-1, 2, 3, 5, -3, 7, ] 
Вывод:

[False, True, True, True, False, True] 
Используйте встроенную функцию.
"""
# list_ = [-1, 2, 3, 5, -3, 7]
# result = list(map(lambda x: x > 0, list_))
# print(result)

# task 10
"""

"""
# import functools
# list_ = ['Paul', 'George', 'Ringo', 'John']
# result = functools.reduce(lambda a,b: a if len(a) > len(b) else b, list_)
# print(result)
