# task 1
"""
Вам дана вложенная функция:
def foo():
    var = 'переменная foo'
    def bar():
        . . .
    bar()
print("переменная в foo: ", var)

Внесите изменения в функции bar таким образом чтобы при вызове функции foo и при попытке распечатать 
переменную var в глобальной области видимости, выводился сдедующий результат:

foo()
print("переменная в foo: ", var)
Output:
переменная в foo:  переменная foo
переменная в foo:  переменная bar
"""
# def foo():
#     var = 'переменная foo'
#     def bar():
#         global var
#         var = 'переменная bar'
#     bar()
#     print("переменная в foo: ", var)
# foo()
# print("переменная в foo: ", var)


# task 2
"""
У вас есть глоабльная переменная x со значением "Я глобальная переменная!". 
Напишите функцию my_func() которая изменяет значение этой переменной на "Я могу изменяться", 
т.е если вы после вызова функции распечатаете переменную x вне функции она должна возвращать вам значение "Я могу изменяться".

Пример:

my_func()
print(x)
Output:
Я глобальная переменная!
Я могу изменяться

Затем чтобы удостовериться что вы изменили именно глобальную переменную выведите в консоль словарь глобальных имен.
"""
# x = 'Я глобальная переменная!'
# print(x)
# def my_func():
#     global x
#     x = 'Я могу изменяться'
# my_func()
# print(x)
# print(globals())


# task 3
"""
Дана глобальная переменная num со значением 3. Напишите функцию mul которая будет возвращать 
квадрат этой переменной и записывать результат в глобальную переменную num. 
Вызовите функцию три раза, и распечатайте переменную num.

mul()
mul()
mul()
print(num)
Output:

6561
тaк кaк num перезаписали на 9(3*3 = 9) затем на 81
(99 = 81) и после на 6561(8181 = 6561)
"""
# num = 3
# def mul():
#     global num
#     num = num**2
# mul()
# mul()
# mul()
# print(num)


# task 4
"""
Напишите небольшую программу для подсчета доходов и расходов.
У вас есть глобальная переменная balance = 0 общий счет.
Программа должна состоять из трех функций: get_salary(amount) - функция для увеличения баланса, 
которая принимает в аргументы amount - заработная плата и увеличивает переменную balance на число переданное в amount.
pay_bills(amount, log_name) - уменьшает баланс на количество amount , 
log_name - принимает строку - на что были потрачены деньги и распечатывает результат, 
например если мы вызвали pay_bills(300, 'интернет') функция распечатывает строку в виде
"Вы заплатили 300 сом за интернет"
И функция get_balance(), которая будет распечатывать вам строку:
У вас на счету `n` сом
где n - это текущее значение глобальной переменной balance.
Вызовите функции в данном порядке:

get_salary(1000)
get_balance()
pay_bills(400, 'кабельное тв')
get_balance()
Результат в консоли:
У вас на счету 1000 сом
Вы заплатили 400 сом за кабельное тв
У вас на счету 600 сом
"""
# balance = 0
# def get_salary(amount):
#     global balance
#     balance += amount
    
# def pay_bills(amount, log_name):
#     global balance
#     balance -= amount
#     print(f'Вы заплатили {amount} сом за {log_name}')

# def get_balance():
#     global balance
#     print(f'У вас на счету {balance} сом')

# get_salary(1000)
# get_balance()
# pay_bills(400, 'кабельное тв')
# get_balance()


# task 5
"""
В Python есть встроенная арифметическая функция pow(), pow принимает два обязательных аргумента x, y 
и один необязательный z и возвращает результат в виде x**y % z - возводит первое число в степень y и если 
передано третье число, делит результат на третье число и возвращает остаток.

Пример использования pow:

print(pow(2,3))
# 8 - тaк кaк 2**3 = 8
print(pow(2, 3, 3))
# 2 - т.к 2**3 = 8, а остаток от деления 8 % 3 = 2
У вас есть глобальная переменная result = 0. Напишите функции pow_first(x,y), отвечает за первую часть 
встроенной функции pow и pow_second(z), отвечает за вторую часть pow(z). 
Вызовите эти функции, а затем выведите переменную result.

Пример:
"""
# result = 0
# def pow_first(x,y):
#     global result
#     result = x**y

# def pow_second(z):
#     global result
#     result = result % z

# pow_first(2, 3)
# pow_second(3)
# print(result)


# task 6
"""
Мурат с друзьями на выходных решил собратся и пойти в ночной клуб.Но в ночной клуб пропускают только тех, кому 17+. 
Создайте словарь ключами которого являются имена Мурата и его друзей, а значениями являются их возраст.

a = {'Мурат': 24, 'Эржан': 21, 'Чынгыз': 24, 'Алтынай': 17, 'Асема': 16}

Напишите программу которая определяет кого пустить в ночной клуб а кого нет.

Output:

Мурат, Вы можете войти в клуб
Эржан, Вы можете войти в клуб
Чынгыз, Вы можете войти в клуб
Алтынай, Вы можете войти в клуб
Асема, извините, Вы не проходите по age-control
"""
# a = {'Мурат': 24, 'Эржан': 21, 'Чынгыз': 24, 'Алтынай': 17, 'Асема': 16}
# def age_control():
#    global a
#    for key,val in a.items():
#        if val >= 17:
#            print(f'{key}, Вы можете войти в клуб')
#        else:
#            print(f'{key}, извините, Вы не проходите по age-control')

# age_control()


# task 7
"""
Вам дан список a из нескольких имён в нижнем регистре. Напишите программу которая превращает имена из списка в имена, 
где первая буква имени в верхнем регистре.Запишите результат в новый список b и выведите переменную b.

Пример:
 a: ['pipi', 'papa', 'mama']
 b: ['Pipi', 'Papa', 'Mama']
"""
# a = ['pipi', 'papa', 'mama']
# def capital_():
#     global a
#     b = [i.capitalize() for i in a]
#     return b
# # capital_()
# b = capital_()
# print(b)


#  task 8
"""
Напишите функцию count_symbols() которая принимает строку и возвращает количество гласных, 
согласных букв и остальных символов. Используйте только кириллические символы. Распечатайте вызов функции.

Пример:

print(count_symbols('Мурат супер!'))
output:

Количество гласных: 4, согласных: 6, остальных символов: 2
"""
# vowels = ['а', 'у', 'о', 'ы', 'и', 'э', 'я', 'ю', "ё", 'е']
# def count_symbols(word):
#     glas, sogl, other = 0, 0, 0
#     for i in word:
#         if i.isalpha() and i in vowels:
#             glas = glas + 1
#         elif i.isalpha():
#             sogl = sogl + 1
#         else:
#             other = other + 1
#     return f'Количество гласных: {glas}, согласных: {sogl}, остальных символов: {other}'
# print(count_symbols('Мурат супер!'))


#  task 9
"""
Создайте пустой список a. Напишите программу которая должна записывать 
в ваш список числа от 0 до 10. Распечатайте переменную a.
"""
# a = []
# def lst_():
#     global a
#     a = [i for i in range(0, 11)]
#     return a
# print(lst_())


# task 10
"""
Определите перемнную a в котором будут хранится список из целых чисел.

a = [1, 3, 4, 6, 8, 6, 8, 9, 0, 3]
Напишите программу которая выводит все элементы этого списка, которые меньше 7.
"""
# a = [1, 3, 4, 6, 8, 6, 8, 9, 0, 3]
# for i in a:
#     if i < 7:
#         print(i)

