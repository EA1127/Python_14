"""

GIT - система контроля версий, это система
записывающая изменения в файл или набор
файлов в течение времени

* локальная
* централизованная
* распределенная (GIT)

У GIT есть 3 основных состояний в котором назодятся файлы:
- завиксированная
- измененная
- подготовленная
"""


# Ребят у меня была бессоница. Поэтому если кому-то понадобиться выжимка по Видео Kani по Git, то вот получайте!

#                                     ----   ИНСТРУКЦИЯ ПО GIT !!!! ----
"""
создание SSH ключа
набираем комаду в терминале:                    ssh-keygen -t rsa -b 4096 -C "ваш email"
                                                Enter -> Enter -> Enter -> ~/.ssh/ -> Enter -> cat id_rsa.pub

                                                У нас сгенерируется публичный ключ, его копируем и открываем
                                                GitHub, заходим в stettings во вкладку SSH and GPG Keys, в title 
                                                добавляем название ключа, а в Key вставляем наш скопированный ключ и
                                                нажимаем кнопку Add SSH key!

---------------------------------------------------------------------------------------------------------------------

                                      ----   НАСТРОЙКА GIT !!!! ----
                                     
После того как Git появился на компьютере, нужно ввести свои данные, а именно имя и адрес электронной почты. 
Ваши действия в Git будут содержать эту информацию.


Для этого в терминале после установки git набираем команды:

1)           git config --global user.ваш_username
2)           git config --global user.email "ваш email"

3)           git config --list

---------------------------------------------------------------------------------------------------------------------

1. Создаем репозиторий:                         mkdir name_folder

2. Создаем файл в нем:                          touch name_file

3. Открываем файл:                              nano name_file

4. Делаем изменения и сохраняем:                CTRL + X, Y, Enter

5. Проверяем содержимое:                        ls

6. Инициализируем наш git проект:               git init (если не установлен git, то выйдет сообщение,
                                                тогда надо использовать sudo apt install git для установки git,
                                                а потом команду git init)

7. Проверяем на наличие скрытой папки гит:      ls -a  (должны увидеть файл .git)
8. Далее проверяем гит статус:                  git status (выйдет Untracked files, название файла
                                                горит красным, то есть это значит нет коммитов)
                                                
9. Далее добавляем наш файл в staging area,     git add . (все файлы в данной репозитории)
   то есть в index:                             или  git add name_file (те файлы которые укажем)
                                                

10. Проверяем статус:                           git status (выйдет Changes to be commited, название
                                                файла горит зеленым, файл готов к коммиту)
                                                
11. Делаем слепок нашего файла (коммитим,
    то есть фиксируем его текущее состояние):   git commit -m "Комментарий"


12. Далее заходим в GitHub ищем в верхнем правом углу кнопку New repository нажимаем
    и создаем новый репозиторий (Название, выбираем Public или Private,  выбираем Add a README file,
    выбираем Add .gitignore пишем Python, далее нажимаем Create repository)

13. В нашем GitHub копируем наш SSHадрес (это адрес у нас появился после генерации ключа)

14. Далее в терминале прописываем команду:      git remote add origin SSHадрес 
    (для того чтобы удаленный репозиторий
    добавить к нам на локальный репозиторий!!)

15. Далее набираем команду                      git branch  (увидем ветку * master)
16. Создадим новую ветку                        git branch name_of_branch (создастся другая ветка)

17. Переключаемся на новую ветку                git checkout name_of_branch 
                                                и далее опять команду git branch 
                                                (и увидем * name_of_branch)

18. Теперь отправим наш файл в GitHub           git push --set-upstream origin name_of_branch
    (в ветку name_of_branch)                    (только один раз, т. к. ветка создается один раз)
                                                    
19. Заходим в GitHub обновим заходим в 
    репозитории (увидим только нашу ветку name_of_branch с нашим файлом внутри)

20. Далее надо создать ветку master в гитхабе, 
    для этого в терминале  набираем команды     git checkout master -> git branch -> git status ->
                                                -> создадим например файл (touch name_file-2) ->
                                                -> git status -> git add . -> git status -> 
                                                -> git commit -m "комментарий" ->
                                                -> git push --set-upstream origin master

21. Далее в гитхабе в нашем созданном репозитории будут находится 2 ветки

22. Заходим по кнопке Compare & Pull request, чтобы слить все изменения с ветки name_of_branch
    в ветку master. 
    -Нажимаем кнопку     Create pull request
    -Нажимаем кнопку     Merge pull request
    -Нажимаем            Confirm merge

---------------------------------------------------------------------------------------------------
"""
 
#                                     --- Испоьзование git clone ---
"""
Если у нас есть уже созданные репозитории в гихабе, и мы хотим клонировать с удаленного репозитория 
к себе на локальный репозиторий наши проекты, надо использовать    git clone

Для начала заходим в нужный нам репозиторий в гитхабе. Копируем SSH адрес (по кнопке Code)

1. Заходим в терминал -> заходим в необходимый репозиторий

2. Набираем команду:            git clone SSH адрес

3. Далее проект клонируется, и создается папка с названием клонируемого Проекта на нашей локалке
    (в указанной папке)

4. Нажимаем ls -> cd Папка_Проекта -> ls (и увидим клоны всех файлов которые есть на удаленном 
    репозитории кроме тех которые скрыты .gitignore)

5. ls -a (тогда мы увидим .gitignore  и .git)
"""

#                                     --- Использование  git pull ---
"""
6. На одном из наших удаленных репозитории допустим в ветке master создадим файл (допусти добавим README)

7. Нажимаем   Commit new file   (и в данном удаленном репозитории создастся файл  README.md)

8. Но на локальном репозитроии не будет данного файла (если проверить через  ls -a мы не увидим README.md)

9. Поэтому применяем в терминале команду   git pull origin master (ТО ЕСТЬ СТЯГИВАЕМ ИЗМЕНЕНИЯ С УДАЛЕНКИ НА ЛОКАЛКУ)

10. Далее набираем  ls -a,   и увидим что появился файл README.md

"""


