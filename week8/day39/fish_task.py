
"""
Условие задачи:
--------------------------------------------------------------------------------

Вам даны два непустых массива A и B, состоящих из N целых чисел. Массивы A и B 
представляют N прожорливых рыб в реке, упорядоченных вниз по течению реки.

Рыбы пронумерованы от 0 до N - 1. Если P и Q - две рыбы и P < Q, то рыба P изначально 
находится выше по течению от рыбы Q. Изначально каждая рыба занимает уникальное положение.

Число рыб P обозначается буквами A[P] и B[P]. 

Массив A содержит размеры рыбы. Все его элементы уникальны. 
Массив B содержит направления движения рыбы. Он содержит только нули и/или единицы, где:

    0 представляет рыбу, плывущую вверх по течению,
    1 изображает рыбу, плывущую вниз по течению.

Если две рыбы движутся в противоположных направлениях и между ними нет другой (живой) рыбы,
 они рано или поздно встретятся друг с другом. Тогда в живых может остаться только одна 
 рыба - большая рыба поедает меньшую. Точнее, мы говорим, что две рыбы P и Q встречаются, 
 когда P < Q, B[P] = 1 и B[Q] = 0, и между ними нет живых рыб. После встречи:

Если A [P]> A [Q], тогда P ест Q, и P все равно будет течь вниз по потоку,
Если A [Q]> A [P], тогда Q ест P, и Q все равно будет течь вверх по течению.

Мы предполагаем, что все рыбы движутся с одинаковой скоростью. То есть рыбы, движущиеся 
в одном направлении, никогда не встречаются. Цель состоит в том, чтобы подсчитать количество рыб, 
которые останутся в живых.

Например, рассмотрим массивы A и B такие, что:

  A[0] = 4  B[0] = 0
  A[1] = 3  B[1] = 1
  A[2] = 2  B[2] = 0
  A[3] = 1  B[3] = 0
  A[4] = 5  B[4] = 0

Изначально все рыбы живы и все, кроме рыбы №1, движутся вверх по течению. Рыба № 1 встречает рыбу 
№ 2 и ест ее, затем она встречает рыбу № 3 и ест ее тоже. Наконец, он встречает рыбу номер 4 и 
съедается ею. Остальные две рыбы, номер 0 и 4, никогда не встречаются и поэтому остаются в живых.


Напишите функцию:

def решение (A, B)

это, учитывая два непустых массива A и B, состоящих из N целых чисел, возвращает количество рыб, 
которые останутся в живых.

Например, учитывая массивы, показанные выше, функция должна вернуть 2, как объяснено выше.

Напишите эффективный алгоритм для следующих предположений:

N - целое число в диапазоне [1..100,000];
каждый элемент массива A является целым числом в диапазоне [0..1,000,000,000];
каждый элемент массива B является целым числом, которое может иметь одно из следующих значений: 0, 1;
все элементы A различны.

"""

import random

def fish_eater(f_size, f_direction):
    fish_stack = []
    fish_alive = len(f_size)
    if not len(f_size):
        return 0
    for i in range(len(f_size)):
        if f_direction[i] == 1:
            fish_stack.append(f_size[i])
            # print(fish_stack)
        else:
            while len(fish_stack):
                if fish_stack[-1] > f_size[i]:
                    fish_alive -= 1
                    break
                if fish_stack[-1] < f_size[i]:
                    fish_alive -= 1
                    fish_stack.pop()
                    # print(fish_stack)           
    return fish_alive

A = []
for i in range(1, 100000):
    i = random.randint(1, 1000000000)
    A.append(i)
# print(A)

B = []
for j in range(1, 100000):
    j = random.randint(0, 1)
    B.append(j)
# print(B)

print(fish_eater(A, B))
